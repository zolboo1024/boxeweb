import { ReactNode } from 'react';
import useTableMotion from '../hooks/useTableMotion';
import { ComposableWithRef, Column, RenderProps, NativeTr } from '../types';
import { ComposableCell } from './Cell';
interface RowRenderProps {
    props: {
        width: number | string;
    };
    key: string;
    data: unknown;
    column: Column;
    motion: ReturnType<typeof useTableMotion>;
    index: number;
    header: boolean;
    content: ReactNode;
}
interface SpecificProps extends NativeTr {
    height: number;
    motion?: ReturnType<typeof useTableMotion>;
    data?: object;
    header?: boolean;
}
declare type Props = RenderProps<SpecificProps, RowRenderProps>;
export declare const ROW_TRANSITIONS: {
    prop: string;
    duration: number;
    func: string;
    delay: number;
    optimize: boolean;
}[];
interface Composites {
    Cell?: ComposableCell;
}
export declare type ComposableRow = ComposableWithRef<HTMLTableRowElement, Props, Composites>;
declare const FowardedRow: ComposableRow;
export default FowardedRow;
