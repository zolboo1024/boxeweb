import React, { PropsWithChildren, DetailedHTMLProps, HTMLAttributes, FC } from 'react';
import { ComposableWithRef } from '../types';
export declare enum CellTag {
    Td = "td",
    Th = "th"
}
interface CellContainer extends DetailedHTMLProps<HTMLAttributes<HTMLTableCellElement>, HTMLTableCellElement> {
    tag?: CellTag;
}
declare type Props = PropsWithChildren<SpecificProps & CellContainer>;
interface SuffixProps {
    sorting: boolean;
    ascending: boolean;
}
interface Composites {
    Suffix: FC<SuffixProps>;
}
interface SpecificProps {
    width?: number | string | React.ReactText;
    height?: number;
    className?: string;
    onClick?: () => void;
    sortable?: boolean;
    sorting?: boolean;
    sticky?: boolean;
    header?: boolean;
}
export declare type ComposableCell = ComposableWithRef<HTMLTableCellElement, Props, Composites>;
declare const ForwardedCell: ComposableCell;
export default ForwardedCell;
