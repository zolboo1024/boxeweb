'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _get = require('lodash/get');

var _get2 = _interopRequireDefault(_get);

var _AddressShapeWithValidation = require('./propTypes/AddressShapeWithValidation');

var _AddressShapeWithValidation2 = _interopRequireDefault(_AddressShapeWithValidation);

var _validateAddress = require('./validateAddress');

var _constants = require('./constants');

var _postalCodeAutoCompleteAddress = require('./postalCodeAutoCompleteAddress');

var _postalCodeAutoCompleteAddress2 = _interopRequireDefault(_postalCodeAutoCompleteAddress);

var _addressContainerContext = require('./addressContainerContext');

var _addressRulesContext = require('./addressRulesContext');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AddressContainer = function (_Component) {
  _inherits(AddressContainer, _Component);

  function AddressContainer() {
    var _temp, _this, _ret;

    _classCallCheck(this, AddressContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleAddressChange = function (changedAddressFields) {
      var _this$props = _this.props,
          cors = _this$props.cors,
          accountName = _this$props.accountName,
          rules = _this$props.rules,
          address = _this$props.address,
          onChangeAddress = _this$props.onChangeAddress,
          autoCompletePostalCode = _this$props.autoCompletePostalCode,
          shouldAddFocusToNextInvalidField = _this$props.shouldAddFocusToNextInvalidField;


      var countryChanged = changedAddressFields.country && changedAddressFields.country.value && changedAddressFields.country.value !== address.country.value;

      if (countryChanged) {
        return onChangeAddress(_extends({}, address, changedAddressFields));
      }

      var validatedAddress = (0, _validateAddress.validateChangedFields)(changedAddressFields, address, rules);

      if (autoCompletePostalCode && changedAddressFields.postalCode && !changedAddressFields.postalCode.geolocationAutoCompleted) {
        var postalCodeField = rules.fields.find(function (field) {
          return field.name === 'postalCode';
        });
        var diffFromPrev = address.postalCode.value !== validatedAddress.postalCode.value;
        var isValidPostalCode = validatedAddress.postalCode.valid === true;
        var shouldAutoComplete = rules.postalCodeFrom === _constants.POSTAL_CODE && diffFromPrev && isValidPostalCode && postalCodeField.postalCodeAPI;

        if (shouldAutoComplete) {
          return onChangeAddress((0, _postalCodeAutoCompleteAddress2.default)({
            cors: cors,
            accountName: accountName,
            address: validatedAddress,
            rules: rules,
            callback: _this.handleAddressChange,
            shouldAddFocusToNextInvalidField: shouldAddFocusToNextInvalidField
          }));
        }
      }

      onChangeAddress(validatedAddress);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  AddressContainer.prototype.componentDidMount = function componentDidMount() {
    if (this.props && this.props.shouldHandleAddressChangeOnMount && (0, _get2.default)(this.props, 'address.postalCode.value')) {
      this.handleAddressChange(this.props.address);
    }
  };

  AddressContainer.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        Input = _props.Input,
        address = _props.address;

    var handleAddressChange = this.handleAddressChange;

    return _react2.default.createElement(
      _addressContainerContext.AddressContext.Provider,
      { value: { address: address, handleAddressChange: handleAddressChange, Input: Input } },
      children
    );
  };

  return AddressContainer;
}(_react.Component);

AddressContainer.defaultProps = {
  cors: false,
  autoCompletePostalCode: true,
  shouldHandleAddressChangeOnMount: false,
  shouldAddFocusToNextInvalidField: true
};

AddressContainer.propTypes = process.env.NODE_ENV !== "production" ? {
  cors: _propTypes2.default.bool,
  accountName: _propTypes2.default.string,
  address: _AddressShapeWithValidation2.default,
  rules: _propTypes2.default.object.isRequired,
  Input: _propTypes2.default.func,
  onChangeAddress: _propTypes2.default.func.isRequired,
  children: _propTypes2.default.any.isRequired,
  autoCompletePostalCode: _propTypes2.default.bool,
  shouldHandleAddressChangeOnMount: _propTypes2.default.bool,
  shouldAddFocusToNextInvalidField: _propTypes2.default.bool
} : {};

exports.default = (0, _addressRulesContext.injectRules)(AddressContainer);
module.exports = exports['default'];