'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Spinner = require('@vtex/styleguide/lib/Spinner');

var _Spinner2 = _interopRequireDefault(_Spinner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SpinnerLoading = function (_Component) {
  _inherits(SpinnerLoading, _Component);

  function SpinnerLoading() {
    _classCallCheck(this, SpinnerLoading);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  SpinnerLoading.prototype.render = function render() {
    var isLoading = this.props.isLoading;


    return isLoading === true && _react2.default.createElement(
      'div',
      { className: 'pl1 pt7' },
      _react2.default.createElement(_Spinner2.default, { size: 15 })
    );
  };

  return SpinnerLoading;
}(_react.Component);

SpinnerLoading.propTypes = process.env.NODE_ENV !== "production" ? {
  isLoading: _propTypes2.default.bool
} : {};

exports.default = SpinnerLoading;
module.exports = exports['default'];