'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _AddressShapeWithValidation = require('../../propTypes/AddressShapeWithValidation');

var _AddressShapeWithValidation2 = _interopRequireDefault(_AddressShapeWithValidation);

var _map = require('lodash/map');

var _map2 = _interopRequireDefault(_map);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputSelect = function (_Component) {
  _inherits(InputSelect, _Component);

  function InputSelect() {
    var _temp, _this, _ret;

    _classCallCheck(this, InputSelect);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleChange = function (e) {
      _this.props.onChange(e.target.value);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  InputSelect.prototype.render = function render() {
    var _cx;

    var _props = this.props,
        address = _props.address,
        options = _props.options,
        field = _props.field,
        disabled = _props.disabled;

    var fieldValue = address[field.name];

    var className = (0, _classnames2.default)((_cx = {}, _cx['input-' + field.size] = field.size, _cx.success = fieldValue.valid === true, _cx.error = fieldValue.valid === false, _cx));

    return _react2.default.createElement(
      'select',
      {
        name: field.elementName || field.name,
        id: 'ship-' + field.name,
        value: address[field.name].value || '',
        onChange: this.handleChange,
        onBlur: this.props.onBlur,
        disabled: disabled,
        className: className,
        ref: this.props.inputRef
      },
      field.optionsCaption !== null && field.optionsCaption !== undefined && field.optionsCaption === false ? null : _react2.default.createElement(
        'option',
        {
          value: '',
          disabled: address[field.name].value ? true : undefined
        },
        field.optionsCaption
      ),
      (0, _map2.default)(options, function (_ref) {
        var value = _ref.value,
            label = _ref.label;
        return _react2.default.createElement(
          'option',
          { key: value, value: value },
          label
        );
      })
    );
  };

  return InputSelect;
}(_react.Component);

InputSelect.propTypes = process.env.NODE_ENV !== "production" ? {
  field: _propTypes2.default.object.isRequired,
  options: _propTypes2.default.array.isRequired,
  address: _AddressShapeWithValidation2.default,
  onChange: _propTypes2.default.func.isRequired,
  onBlur: _propTypes2.default.func.isRequired,
  disabled: _propTypes2.default.bool,
  inputRef: _propTypes2.default.func
} : {};

exports.default = InputSelect;
module.exports = exports['default'];