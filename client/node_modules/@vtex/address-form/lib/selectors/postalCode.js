'use strict';

exports.__esModule = true;
exports.getPostalCodeOptions = getPostalCodeOptions;
exports.getLastLevelField = getLastLevelField;
exports.getLevelField = getLevelField;

var _constants = require('../constants');

var _fields = require('./fields');

var _last = require('lodash/last');

var _last2 = _interopRequireDefault(_last);

var _cleanStr = require('./cleanStr');

var _cleanStr2 = _interopRequireDefault(_cleanStr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getPostalCodeOptions(address, rules) {
  switch (rules.postalCodeFrom) {
    case _constants.ONE_LEVEL:
      return getOneLevelPostalCodes(address, rules);
    case _constants.TWO_LEVELS:
      return getTwoLevelsPostalCodes(address, rules);
    default:
    case _constants.THREE_LEVELS:
      return getThreeLevelsPostalCodes(address, rules);
  }
}

function getOneLevelPostalCodes(address, rules) {
  return rules.firstLevelPostalCodes;
}

function getTwoLevelsPostalCodes(address, rules) {
  var firstLevel = (0, _fields.getField)(rules.postalCodeLevels[0], rules);
  var firstLevelValue = (0, _cleanStr2.default)(address[firstLevel.name].value);
  var normalizedSecondLevelPostalCodes = (0, _fields.normalizeOptions)(rules.secondLevelPostalCodes);

  return address[firstLevel.name] && address[firstLevel.name].value && normalizedSecondLevelPostalCodes[firstLevelValue] ? normalizedSecondLevelPostalCodes[firstLevelValue] : [];
}

function getThreeLevelsPostalCodes(address, rules) {
  var firstLevel = (0, _fields.getField)(rules.postalCodeLevels[0], rules);
  var secondLevel = (0, _fields.getField)(rules.postalCodeLevels[1], rules);

  var firstLevelValue = (0, _cleanStr2.default)(address[firstLevel.name].value);
  var normalizedThirdLevelPostalCodes = (0, _fields.normalizeOptions)(rules.thirdLevelPostalCodes);

  return address[firstLevel.name] && firstLevelValue && address[secondLevel.name] && address[secondLevel.name].value && normalizedThirdLevelPostalCodes[firstLevelValue] && normalizedThirdLevelPostalCodes[firstLevelValue][address[secondLevel.name].value] ? normalizedThirdLevelPostalCodes[firstLevelValue][address[secondLevel.name].value] : [];
}

function getLastLevelField(rules) {
  switch (rules.postalCodeFrom) {
    case _constants.ONE_LEVEL:
    case _constants.TWO_LEVELS:
    case _constants.THREE_LEVELS:
      return (0, _fields.getField)((0, _last2.default)(rules.postalCodeLevels), rules);
    default:
      throw new Error('Unknown postalCodeFrom value: ' + rules.postalCodeFrom);
  }
}

function getLevelField(level, rules) {
  return (0, _fields.getField)(rules.postalCodeLevels[level], rules);
}