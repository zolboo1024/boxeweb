'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _AddressShapeWithValidation = require('./propTypes/AddressShapeWithValidation');

var _AddressShapeWithValidation2 = _interopRequireDefault(_AddressShapeWithValidation);

var _InputFieldContainer = require('./InputFieldContainer');

var _InputFieldContainer2 = _interopRequireDefault(_InputFieldContainer);

var _DefaultInput = require('./inputs/DefaultInput');

var _DefaultInput2 = _interopRequireDefault(_DefaultInput);

var _fields = require('./selectors/fields');

var _SelectPostalCode = require('./postalCodeFrom/SelectPostalCode');

var _SelectPostalCode2 = _interopRequireDefault(_SelectPostalCode);

var _addressRulesContext = require('./addressRulesContext');

var _recompose = require('recompose');

var _addressContainerContext = require('./addressContainerContext');

var _reactIntl = require('react-intl');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AddressForm = function (_Component) {
  _inherits(AddressForm, _Component);

  function AddressForm() {
    _classCallCheck(this, AddressForm);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  AddressForm.prototype.render = function render() {
    var _props = this.props,
        address = _props.address,
        rules = _props.rules,
        onChangeAddress = _props.onChangeAddress,
        Input = _props.Input,
        intl = _props.intl,
        notApplicableLabel = _props.notApplicableLabel,
        omitPostalCodeFields = _props.omitPostalCodeFields,
        omitAutoCompletedFields = _props.omitAutoCompletedFields;


    var fields = omitPostalCodeFields ? (0, _fields.filterPostalCodeFields)(rules) : rules.fields;

    fields = omitAutoCompletedFields ? (0, _fields.filterAutoCompletedFields)({ fields: fields }, address) : fields;

    return _react2.default.createElement(
      'div',
      null,
      fields.map(function (field) {
        return (0, _fields.isDefiningPostalCodeField)(field.name, rules) ? _react2.default.createElement(_SelectPostalCode2.default, {
          Input: Input,
          rules: rules,
          address: address,
          onChangeAddress: onChangeAddress
        }) : _react2.default.createElement(_InputFieldContainer2.default, {
          intl: intl,
          key: field.name,
          Input: Input,
          field: field,
          address: address,
          rules: rules,
          onChangeAddress: onChangeAddress,
          notApplicableLabel: notApplicableLabel
        });
      })
    );
  };

  return AddressForm;
}(_react.Component);

AddressForm.defaultProps = {
  omitPostalCodeFields: true,
  omitAutoCompletedFields: true,
  Input: _DefaultInput2.default
};

AddressForm.propTypes = process.env.NODE_ENV !== "production" ? {
  Input: _propTypes2.default.func,
  intl: _reactIntl.intlShape,
  address: _AddressShapeWithValidation2.default,
  omitPostalCodeFields: _propTypes2.default.bool,
  omitAutoCompletedFields: _propTypes2.default.bool,
  rules: _propTypes2.default.object.isRequired,
  onChangeAddress: _propTypes2.default.func.isRequired,
  notApplicableLabel: _propTypes2.default.string
} : {};

var enhance = (0, _recompose.compose)(_addressContainerContext.injectAddressContext, _addressRulesContext.injectRules, _reactIntl.injectIntl);
exports.default = enhance(AddressForm);
module.exports = exports['default'];