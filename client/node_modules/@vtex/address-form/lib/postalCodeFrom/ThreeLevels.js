'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _AddressShapeWithValidation = require('../propTypes/AddressShapeWithValidation');

var _AddressShapeWithValidation2 = _interopRequireDefault(_AddressShapeWithValidation);

var _SelectLevel = require('./SelectLevel');

var _SelectLevel2 = _interopRequireDefault(_SelectLevel);

var _SelectPostalCode = require('./SelectPostalCode');

var _SelectPostalCode2 = _interopRequireDefault(_SelectPostalCode);

var _SubmitButton = require('./SubmitButton');

var _SubmitButton2 = _interopRequireDefault(_SubmitButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ThreeLevels = function (_Component) {
  _inherits(ThreeLevels, _Component);

  function ThreeLevels() {
    var _temp, _this, _ret;

    _classCallCheck(this, ThreeLevels);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleSubmit = function (event) {
      event.preventDefault();
      _this.props.onSubmit && _this.props.onSubmit();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  ThreeLevels.prototype.render = function render() {
    var _props = this.props,
        address = _props.address,
        Button = _props.Button,
        rules = _props.rules,
        Input = _props.Input,
        loading = _props.loading,
        onChangeAddress = _props.onChangeAddress,
        onSubmit = _props.onSubmit,
        submitLabel = _props.submitLabel;


    if (Button && onSubmit) {
      return _react2.default.createElement(
        'form',
        {
          className: 'vtex-address-form__threeLevels',
          onSubmit: this.handleSubmit
        },
        _react2.default.createElement(_SelectLevel2.default, {
          level: 0,
          Input: Input,
          loading: loading,
          rules: rules,
          address: address,
          onChangeAddress: onChangeAddress
        }),
        _react2.default.createElement(_SelectLevel2.default, {
          level: 1,
          Input: Input,
          loading: loading,
          rules: rules,
          address: address,
          onChangeAddress: onChangeAddress
        }),
        _react2.default.createElement(_SelectPostalCode2.default, {
          Input: Input,
          loading: loading,
          rules: rules,
          address: address,
          onChangeAddress: onChangeAddress
        }),
        _react2.default.createElement(_SubmitButton2.default, { Button: Button, buttonLabel: submitLabel })
      );
    }

    return _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(_SelectLevel2.default, {
        level: 0,
        Input: Input,
        loading: loading,
        rules: rules,
        address: address,
        onChangeAddress: onChangeAddress
      }),
      _react2.default.createElement(_SelectLevel2.default, {
        level: 1,
        Input: Input,
        loading: loading,
        rules: rules,
        address: address,
        onChangeAddress: onChangeAddress
      }),
      _react2.default.createElement(_SelectPostalCode2.default, {
        Input: Input,
        loading: loading,
        rules: rules,
        address: address,
        onChangeAddress: onChangeAddress
      })
    );
  };

  return ThreeLevels;
}(_react.Component);

ThreeLevels.propTypes = process.env.NODE_ENV !== "production" ? {
  address: _AddressShapeWithValidation2.default,
  Button: _propTypes2.default.func,
  loading: _propTypes2.default.func,
  Input: _propTypes2.default.func.isRequired,
  onChangeAddress: _propTypes2.default.func.isRequired,
  onSubmit: _propTypes2.default.func,
  rules: _propTypes2.default.object.isRequired,
  submitLabel: _propTypes2.default.string
} : {};

exports.default = ThreeLevels;
module.exports = exports['default'];