{"ast":null,"code":"var _jsxFileName = \"/Users/zz/Projects/React/my-app/client/src/components/Messenger.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { tokenConfigJS } from './tokenConfig';\nimport { loadUser } from '../actions/authActions';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\nimport 'materialize-css';\nimport socketIOClient from \"socket.io-client\";\nlet socket;\n\nclass Messenger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enduser: null,\n      joined: false\n    };\n  }\n\n  componentDidMount() {\n    socket = socketIOClient('localhost:3002');\n\n    if (this.props.user) {\n      this.emitWhenJoining(socket);\n    }\n  }\n\n  emitWhenJoining(socket) {\n    let senderID = this.props.user._id;\n    let receiverID = this.props.match.params._id;\n    socket.emit('join', {\n      senderID,\n      receiverID\n    }, () => {});\n    this.setState({\n      joined: true\n    });\n  }\n\n  componentDidUpdate() {\n    if (!this.state.joined) {\n      this.emitWhenJoining(socket);\n      socket.on('chat-message', data => {\n        console.log(data);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    socket.emit('disconnect');\n    socket.off();\n  }\n\n  render() {\n    var main = {\n      'padding': '20'\n    };\n    var image = {\n      'height': '40%',\n      'overflow': 'hidden'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Chat\");\n  }\n\n} //MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\n\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  token: state.auth.token\n});\n\nexport default connect(mapStateToProps, {\n  loadUser\n})(Messenger);","map":{"version":3,"sources":["/Users/zz/Projects/React/my-app/client/src/components/Messenger.js"],"names":["React","Component","useEffect","useState","axios","tokenConfigJS","loadUser","queryString","connect","socketIOClient","socket","Messenger","constructor","props","state","enduser","joined","componentDidMount","user","emitWhenJoining","senderID","_id","receiverID","match","params","emit","setState","componentDidUpdate","on","data","console","log","componentWillUnmount","off","render","main","image","mapStateToProps","auth","isAuthenticated","token"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,iBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,IAAIC,MAAJ;;AACA,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAChCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,MAAM,GAAGD,cAAc,CAAC,gBAAD,CAAvB;;AACA,QAAG,KAAKI,KAAL,CAAWK,IAAd,EAAoB;AAClB,WAAKC,eAAL,CAAqBT,MAArB;AACD;AACF;;AACDS,EAAAA,eAAe,CAACT,MAAD,EAAS;AACtB,QAAIU,QAAQ,GAAG,KAAKP,KAAL,CAAWK,IAAX,CAAgBG,GAA/B;AACA,QAAIC,UAAU,GAAG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBH,GAAzC;AACAX,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAACL,MAAAA,QAAD;AAAWE,MAAAA;AAAX,KAApB,EAA4C,MAAK,CAChD,CADD;AAEA,SAAKI,QAAL,CAAc;AAACV,MAAAA,MAAM,EAAE;AAAT,KAAd;AACD;;AACDW,EAAAA,kBAAkB,GAAE;AAClB,QAAG,CAAC,KAAKb,KAAL,CAAWE,MAAf,EAAsB;AACtB,WAAKG,eAAL,CAAqBT,MAArB;AACAA,MAAAA,MAAM,CAACkB,EAAP,CAAU,cAAV,EAA0BC,IAAI,IAAI;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAFD;AAGC;AACF;;AACDG,EAAAA,oBAAoB,GAAE;AACpBtB,IAAAA,MAAM,CAACe,IAAP,CAAY,YAAZ;AACAf,IAAAA,MAAM,CAACuB,GAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG;AACT,iBAAW;AADF,KAAX;AAGA,QAAIC,KAAK,GAAG;AACV,gBAAU,KADA;AAEV,kBAAY;AAFF,KAAZ;AAIA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAGD;;AA5C+B,C,CA8ClC;AACA;;;AACA,MAAMC,eAAe,GAAGvB,KAAK,KAAK;AAACI,EAAAA,IAAI,EAAEJ,KAAK,CAACwB,IAAN,CAAWpB,IAAlB;AAAwBqB,EAAAA,eAAe,EAAEzB,KAAK,CAACwB,IAAN,CAAWC,eAApD;AAAqEC,EAAAA,KAAK,EAAE1B,KAAK,CAACwB,IAAN,CAAWE;AAAvF,CAAL,CAA7B;;AAEA,eAAehC,OAAO,CAAC6B,eAAD,EAAkB;AAAC/B,EAAAA;AAAD,CAAlB,CAAP,CAAqCK,SAArC,CAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {tokenConfigJS} from './tokenConfig';\nimport {loadUser} from '../actions/authActions';\nimport queryString from 'query-string';\nimport {connect} from 'react-redux';\nimport 'materialize-css';\nimport socketIOClient from \"socket.io-client\";\nlet socket;\nclass Messenger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enduser: null,\n      joined: false\n    };\n  }\n  componentDidMount() {\n    socket = socketIOClient('localhost:3002');\n    if(this.props.user) {\n      this.emitWhenJoining(socket);\n    }\n  }\n  emitWhenJoining(socket) {\n    let senderID = this.props.user._id;\n    let receiverID = this.props.match.params._id;\n    socket.emit('join', {senderID, receiverID}, ()=> {\n    });\n    this.setState({joined: true});\n  }\n  componentDidUpdate(){\n    if(!this.state.joined){\n    this.emitWhenJoining(socket);\n    socket.on('chat-message', data => {\n      console.log(data);\n    });\n    }\n  }\n  componentWillUnmount(){\n    socket.emit('disconnect');\n    socket.off();\n  }\n  render() {\n    var main = {\n      'padding': '20'\n    };\n    var image = {\n      'height': '40%',\n      'overflow': 'hidden'\n    }\n    return (<div>\n      Chat\n    </div>)\n  }\n}\n//MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({user: state.auth.user, isAuthenticated: state.auth.isAuthenticated, token: state.auth.token});\n\nexport default connect(mapStateToProps, {loadUser})(Messenger);\n"]},"metadata":{},"sourceType":"module"}