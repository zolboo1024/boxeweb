{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar geocodeByAddress = exports.geocodeByAddress = function geocodeByAddress(address) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({\n      address: address\n    }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n\n      resolve(results);\n    });\n  });\n};\n\nvar getLatLng = exports.getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var latLng = {\n        lat: result.geometry.location.lat(),\n        lng: result.geometry.location.lng()\n      };\n      resolve(latLng);\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nvar geocodeByPlaceId = exports.geocodeByPlaceId = function geocodeByPlaceId(placeId) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({\n      placeId: placeId\n    }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n\n      resolve(results);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/zz/Projects/React/my-app/node_modules/react-places-autocomplete/dist/utils.js"],"names":["Object","defineProperty","exports","value","geocodeByAddress","address","geocoder","window","google","maps","Geocoder","OK","GeocoderStatus","Promise","resolve","reject","geocode","results","status","getLatLng","result","latLng","lat","geometry","location","lng","e","geocodeByPlaceId","placeId"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAGA,IAAIC,gBAAgB,GAAGF,OAAO,CAACE,gBAAR,GAA2B,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AACnF,MAAIC,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,QAAvB,EAAf;AACA,MAAIC,EAAE,GAAGJ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBG,cAAnB,CAAkCD,EAA3C;AAEA,SAAO,IAAIE,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CT,IAAAA,QAAQ,CAACU,OAAT,CAAiB;AAAEX,MAAAA,OAAO,EAAEA;AAAX,KAAjB,EAAuC,UAAUY,OAAV,EAAmBC,MAAnB,EAA2B;AAChE,UAAIA,MAAM,KAAKP,EAAf,EAAmB;AACjBI,QAAAA,MAAM,CAACG,MAAD,CAAN;AACD;;AACDJ,MAAAA,OAAO,CAACG,OAAD,CAAP;AACD,KALD;AAMD,GAPM,CAAP;AAQD,CAZD;;AAcA,IAAIE,SAAS,GAAGjB,OAAO,CAACiB,SAAR,GAAoB,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AAC7D,SAAO,IAAIP,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAI;AACF,UAAIM,MAAM,GAAG;AACXC,QAAAA,GAAG,EAAEF,MAAM,CAACG,QAAP,CAAgBC,QAAhB,CAAyBF,GAAzB,EADM;AAEXG,QAAAA,GAAG,EAAEL,MAAM,CAACG,QAAP,CAAgBC,QAAhB,CAAyBC,GAAzB;AAFM,OAAb;AAIAX,MAAAA,OAAO,CAACO,MAAD,CAAP;AACD,KAND,CAME,OAAOK,CAAP,EAAU;AACVX,MAAAA,MAAM,CAACW,CAAD,CAAN;AACD;AACF,GAVM,CAAP;AAWD,CAZD;;AAcA,IAAIC,gBAAgB,GAAGzB,OAAO,CAACyB,gBAAR,GAA2B,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AACnF,MAAItB,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,QAAvB,EAAf;AACA,MAAIC,EAAE,GAAGJ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBG,cAAnB,CAAkCD,EAA3C;AAEA,SAAO,IAAIE,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CT,IAAAA,QAAQ,CAACU,OAAT,CAAiB;AAAEY,MAAAA,OAAO,EAAEA;AAAX,KAAjB,EAAuC,UAAUX,OAAV,EAAmBC,MAAnB,EAA2B;AAChE,UAAIA,MAAM,KAAKP,EAAf,EAAmB;AACjBI,QAAAA,MAAM,CAACG,MAAD,CAAN;AACD;;AACDJ,MAAAA,OAAO,CAACG,OAAD,CAAP;AACD,KALD;AAMD,GAPM,CAAP;AAQD,CAZD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar geocodeByAddress = exports.geocodeByAddress = function geocodeByAddress(address) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ address: address }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};\n\nvar getLatLng = exports.getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var latLng = {\n        lat: result.geometry.location.lat(),\n        lng: result.geometry.location.lng()\n      };\n      resolve(latLng);\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nvar geocodeByPlaceId = exports.geocodeByPlaceId = function geocodeByPlaceId(placeId) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ placeId: placeId }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};"]},"metadata":{},"sourceType":"script"}