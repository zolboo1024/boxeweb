{"ast":null,"code":"var _jsxFileName = \"/Users/zz/Projects/React/my-app/src/components/auth/LogoutModal.js\";\nimport React, { Component } from 'react';\nimport { logout } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport store from '../../store';\nimport { Alert } from 'reactstrap';\nimport { clearErrors } from '../../actions/errorActions';\nimport PropTypes from 'prop-types'; // import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nclass LogoutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Component mounted\");\n    store.dispatch(logout());\n  }\n\n  //When the component updates and the reducers throw an error, we save it in the component state.\n  //handling it in better ways.\n  //when the errors get cleared, this component gets updated.\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === 'LOGOUT_FAIL') {\n        this.setState({\n          msg: error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 26\n      }\n    }, this.state.msg) : /*#__PURE__*/React.createElement(Alert, {\n      color: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }\n    }, \"You are logged out!\"));\n  }\n\n} //MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\n\n\nLogoutModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  clearErrors\n})(LogoutModal);","map":{"version":3,"sources":["/Users/zz/Projects/React/my-app/src/components/auth/LogoutModal.js"],"names":["React","Component","logout","connect","store","Alert","clearErrors","PropTypes","LogoutModal","constructor","props","state","msg","componentDidMount","console","log","dispatch","componentDidUpdate","prevProps","error","id","setState","render","propTypes","isAuthenticated","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,2BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,KAAR,QAAoB,YAApB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAClCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAX,IAAAA,KAAK,CAACY,QAAN,CAAed,MAAM,EAArB;AACD;;AAOD;AACA;AACA;AACAe,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;;AACA,QAAGS,KAAK,KAAKD,SAAS,CAACC,KAAvB,EAA8B;AAC5B;AACA,UAAGA,KAAK,CAACC,EAAN,KAAa,aAAhB,EAA+B;AAC7B,aAAKC,QAAL,CAAc;AAACT,UAAAA,GAAG,EAAEO,KAAK,CAACP;AAAZ,SAAd;AACD,OAFD,MAEO;AACL,aAAKS,QAAL,CAAc;AAACT,UAAAA,GAAG,EAAE;AAAN,SAAd;AACD;AACF;AACF;;AACDU,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,GAAX,gBAAkB,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKD,KAAL,CAAWC,GAApC,CAAlB,gBACkB,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFrB,CADA;AAMD;;AAvCiC,C,CAyCpC;AACA;;;AA1CMJ,W,CAYGe,S,GAAY;AACjBC,EAAAA,eAAe,EAAEjB,SAAS,CAACkB,IADV;AAEjBN,EAAAA,KAAK,EAAEZ,SAAS,CAACmB,MAAV,CAAiBC,UAFP;AAGjBzB,EAAAA,MAAM,EAAEK,SAAS,CAACqB,IAAV,CAAeD,UAHN;AAIjBrB,EAAAA,WAAW,EAAEC,SAAS,CAACqB,IAAV,CAAeD;AAJX,C;;AA+BrB,MAAME,eAAe,GAAGlB,KAAK,KAAK;AAChCa,EAAAA,eAAe,EAAEb,KAAK,CAACmB,IAAN,CAAWN,eADI;AAEhCL,EAAAA,KAAK,EAAER,KAAK,CAACQ;AAFmB,CAAL,CAA7B;;AAKA,eAAehB,OAAO,CACpB0B,eADoB,EAEpB;AAAC3B,EAAAA,MAAD;AAASI,EAAAA;AAAT,CAFoB,CAAP,CAGZE,WAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {logout} from '../../actions/authActions';\nimport {connect} from 'react-redux';\nimport store from '../../store';\nimport {Alert} from 'reactstrap';\nimport {clearErrors} from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\n// import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nclass LogoutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: ''\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Component mounted\");\n    store.dispatch(logout());\n  }\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n  //When the component updates and the reducers throw an error, we save it in the component state.\n  //handling it in better ways.\n  //when the errors get cleared, this component gets updated.\n  componentDidUpdate(prevProps) {\n    const {error} = this.props;\n    if(error !== prevProps.error) {\n      //Check for register error\n      if(error.id === 'LOGOUT_FAIL') {\n        this.setState({msg: error.msg});\n      } else {\n        this.setState({msg: null});\n      }\n    }\n  }\n  render() {\n    return (\n    <div>\n      {this.state.msg ? (<Alert color = \"danger\">{this.state.msg}</Alert>)\n                      : (<Alert color = \"success\">You are logged out!</Alert>)}\n    </div>\n    )\n  }\n}\n//MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  {logout, clearErrors}\n) (LogoutModal);\n"]},"metadata":{},"sourceType":"module"}