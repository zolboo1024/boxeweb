{"ast":null,"code":"var _jsxFileName = \"/Users/zz/Projects/React/my-app/src/components/spaces-list.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { tokenConfigJS } from './tokenConfig';\nimport { loadUser } from '../actions/authActions';\nimport { connect } from 'react-redux';\nimport 'materialize-css';\nimport { Collection, CollectionItem } from 'react-materialize';\nimport SpaceMap from './SpaceMap';\n\nclass SpacesList extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteSpace = this.deleteSpace.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onHoverOver = this.onHoverOver.bind(this); // this.goToUser = this.goToUser.bind(this);\n\n    this.state = {\n      spaces: [],\n      coord: [],\n      hoveringover: {\n        markerLat: 0,\n        markerLong: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    //When the component mounts, we can make adjustments. This only runs once\n    //so we can make some adjustments before it renders.\n    axios.get('0.0.0.0:3000/spaces/', tokenConfigJS(this.props.token)).then(response => {\n      const spacecopy = [...response.data];\n      const size = spacecopy.length;\n      let coord = new Array(size);\n      var i; //here, we save the coordinates in the spaces that\n      //is presented and then save it in our state\n      //to be passed down to the maps component.\n\n      for (i = 0; i < size; i++) {\n        coord[i] = {\n          markerLat: spacecopy[i].latitude,\n          markerLong: spacecopy[i].longitude\n        };\n      }\n\n      this.setState({\n        coord: coord,\n        spaces: spacecopy\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onHoverOver(id, lat, longi) {\n    this.setState({\n      hoveringover: {\n        markerLat: lat,\n        markerLong: longi\n      }\n    });\n  }\n\n  onMouseExit() {\n    this.setState({\n      hoveringover: {\n        markerLat: 0,\n        markerLong: 0\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.hoveringover);\n  }\n\n  deleteSpace(id) {\n    axios.delete('http://localhost:3000/spaces/' + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      spaces: this.state.spaces.filter(el => el._id !== id)\n    });\n  } // goToUser(userid) {\n  //   axios.get('http://localhost:3000/users/' + userid).then(res => {\n  //     console.log(res.data);\n  //   });\n  // }\n  //When you go to the spaces/images/:imagename URL, it gets read by the Server\n  //and according to how we set the route, it then pulls the image from the\n  //database. Mongo\n\n\n  spaceList() {\n    return this.state.spaces.map(currentspace => {\n      return /*#__PURE__*/React.createElement(CollectionItem, {\n        className: \"avatar\",\n        onMouseEnter: () => {\n          this.onHoverOver(currentspace._id, currentspace.latitude, currentspace.longitude);\n        },\n        onMouseLeave: this.onMouseExit,\n        key: currentspace._id,\n        href: 'http://localhost:3001/spaces/' + currentspace._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"\",\n        className: \"circle\",\n        src: \"http://localhost:3000/spaces/images/\" + currentspace.imagename,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, currentspace.description), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, currentspace.location, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }), \"Dimensions and price\"));\n    });\n  }\n\n  render() {\n    var left = {\n      'float': 'left',\n      'width': '50%'\n    };\n    var right = {\n      'float': 'right',\n      'width': '50%'\n    };\n    var main = {\n      'overflow': 'hidden',\n      'padding': '20'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      style: main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"left\",\n      style: left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Collection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, this.spaceList())), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"right\",\n      style: right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SpaceMap, {\n      coord: this.state.coord,\n      hoveringover: this.state.hoveringover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} //MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\n\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  token: state.auth.token\n});\n\nexport default connect(mapStateToProps, {\n  loadUser\n})(SpacesList);","map":{"version":3,"sources":["/Users/zz/Projects/React/my-app/src/components/spaces-list.component.js"],"names":["React","Component","axios","tokenConfigJS","loadUser","connect","Collection","CollectionItem","SpaceMap","SpacesList","constructor","props","deleteSpace","bind","onMouseExit","onHoverOver","state","spaces","coord","hoveringover","markerLat","markerLong","componentDidMount","get","token","then","response","spacecopy","data","size","length","Array","i","latitude","longitude","setState","catch","error","console","log","id","lat","longi","componentDidUpdate","delete","filter","el","_id","spaceList","map","currentspace","imagename","description","location","render","left","right","main","mapStateToProps","user","auth","isAuthenticated"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {tokenConfigJS} from './tokenConfig';\nimport {loadUser} from '../actions/authActions';\nimport {connect} from 'react-redux';\nimport 'materialize-css';\nimport {Collection, CollectionItem} from 'react-materialize';\nimport SpaceMap from './SpaceMap';\nclass SpacesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteSpace = this.deleteSpace.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onHoverOver = this.onHoverOver.bind(this);\n    // this.goToUser = this.goToUser.bind(this);\n    this.state = {\n      spaces: [],\n      coord: [],\n      hoveringover: {\n        markerLat: 0,\n        markerLong: 0\n      }\n    };\n  }\n  componentDidMount() {\n    //When the component mounts, we can make adjustments. This only runs once\n    //so we can make some adjustments before it renders.\n    axios.get('0.0.0.0:3000/spaces/', tokenConfigJS(this.props.token)).then(response => {\n      const spacecopy = [...response.data];\n      const size = spacecopy.length;\n      let coord = new Array(size);\n      var i;\n      //here, we save the coordinates in the spaces that\n      //is presented and then save it in our state\n      //to be passed down to the maps component.\n      for (i = 0; i < size; i++) {\n        coord[i] = {\n          markerLat: spacecopy[i].latitude,\n          markerLong: spacecopy[i].longitude\n        };\n      }\n      this.setState({coord: coord, spaces: spacecopy});\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n  onHoverOver(id, lat, longi) {\n    this.setState({\n      hoveringover: {\n        markerLat: lat,\n        markerLong: longi\n      }\n    });\n  }\n  onMouseExit() {\n    this.setState({\n      hoveringover: {\n        markerLat: 0,\n        markerLong: 0\n      }\n    })\n  }\n  componentDidUpdate() {\n    console.log(this.state.hoveringover)\n  }\n  deleteSpace(id) {\n    axios.delete('http://localhost:3000/spaces/' + id).then(response => {\n      console.log(response.data)\n    });\n\n    this.setState({\n      spaces: this.state.spaces.filter(el => el._id !== id)\n    });\n  }\n  // goToUser(userid) {\n  //   axios.get('http://localhost:3000/users/' + userid).then(res => {\n  //     console.log(res.data);\n  //   });\n  // }\n  //When you go to the spaces/images/:imagename URL, it gets read by the Server\n  //and according to how we set the route, it then pulls the image from the\n  //database. Mongo\n  spaceList() {\n    return this.state.spaces.map(currentspace => {\n      return <CollectionItem className=\"avatar\" onMouseEnter={() => {\n          this.onHoverOver(currentspace._id, currentspace.latitude, currentspace.longitude)\n        }} onMouseLeave={this.onMouseExit} key={currentspace._id} href={'http://localhost:3001/spaces/'+currentspace._id}>\n        <img alt=\"\" className=\"circle\" \n        src={\"http://localhost:3000/spaces/images/\" + currentspace.imagename}/>\n        <span className=\"title\">\n          {currentspace.description}\n        </span>\n        <p>\n          {currentspace.location}\n          <br/>\n          Dimensions and price\n        </p>\n      </CollectionItem>;\n    })\n  }\n\n  render() {\n    var left = {\n      'float': 'left',\n      'width': '50%'\n    };\n    var right = {\n      'float': 'right',\n      'width': '50%'\n    };\n    var main = {\n      'overflow': 'hidden',\n      'padding': '20'\n    };\n    return (<div>\n      <div id=\"main\" style={main}>\n        <div id=\"left\" style={left}>\n          <Collection>\n            {this.spaceList()}\n          </Collection>\n        </div>\n        <div id=\"right\" style={right}>\n          <SpaceMap coord={this.state.coord} hoveringover={this.state.hoveringover}/>\n        </div>\n      </div>\n    </div>);\n  }\n}\n//MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({user: state.auth.user, isAuthenticated: state.auth.isAuthenticated, token: state.auth.token});\n\nexport default connect(mapStateToProps, {loadUser})(SpacesList);\n"]},"metadata":{},"sourceType":"module"}