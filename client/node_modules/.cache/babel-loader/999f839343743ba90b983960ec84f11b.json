{"ast":null,"code":"var _jsxFileName = \"/Users/zz/Projects/React/my-app/client/src/components/auth/RegisterModal.js\";\nimport React, { Component } from 'react';\nimport { register } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport store from '../../store';\nimport { Alert } from 'reactstrap';\nimport { clearErrors } from '../../actions/errorActions';\nimport PropTypes from 'prop-types'; // import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nclass RegisterModal extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      msg: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Component mounted\");\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const thisUser = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password\n    };\n    console.log(thisUser); //Attempt to create the user. If it is not created properly, we throw an\n    //error and if it is, we save the token in a local storage.\n\n    store.dispatch(register(thisUser));\n  }\n\n  //When the component updates and the reducers throw an error, we save it in the component state.\n  //handling it in better ways.\n  //when the errors get cleared, this component gets updated.\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    var logincss = {\n      'margin': '5%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      style: logincss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"usernam\",\n      className: \"form-control\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      required: true,\n      name: \"email\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} //MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\n\n\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterModal);","map":{"version":3,"sources":["/Users/zz/Projects/React/my-app/client/src/components/auth/RegisterModal.js"],"names":["React","Component","register","connect","store","Alert","clearErrors","PropTypes","RegisterModal","constructor","props","onChangeUsername","bind","onChangeEmail","onChangePassword","onSubmit","state","username","email","password","msg","componentDidMount","console","log","isAuthenticated","history","push","e","setState","target","value","preventDefault","thisUser","dispatch","componentDidUpdate","prevProps","error","id","render","logincss","textAlign","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {register} from '../../actions/authActions';\nimport {connect} from 'react-redux';\nimport store from '../../store';\nimport {Alert} from 'reactstrap';\nimport {clearErrors} from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\n// import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nclass RegisterModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      msg: ''\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Component mounted\");\n    const {isAuthenticated} = this.props;\n    if(isAuthenticated) {\n      this.props.history.push('/')\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    })\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const thisUser = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    }\n\n    console.log(thisUser);\n    //Attempt to create the user. If it is not created properly, we throw an\n    //error and if it is, we save the token in a local storage.\n    store.dispatch(register(thisUser));\n  }\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n  //When the component updates and the reducers throw an error, we save it in the component state.\n  //handling it in better ways.\n  //when the errors get cleared, this component gets updated.\n  componentDidUpdate(prevProps) {\n    const {error} = this.props;\n    if(error !== prevProps.error) {\n      //Check for register error\n      if(error.id === 'REGISTER_FAIL') {\n        this.setState({msg: error.msg});\n      } else {\n        this.setState({msg: null});\n      }\n    }\n    const {isAuthenticated} = this.props;\n    if(isAuthenticated) {\n      this.props.history.push('/')\n    }\n  }\n  render() {\n    var logincss = {\n      'margin': '5%'\n    };\n    return (\n    <div>\n      {this.state.msg ? (<Alert color = \"danger\">{this.state.msg}</Alert>) : null}\n      <h3 style={{textAlign: \"center\"}}>Register</h3>\n      <form onSubmit={this.onSubmit} style = {logincss}>\n        <div className=\"form-group\">\n          <label>Username: </label>\n          <input type=\"text\"\n              required\n              name=\"usernam\"\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n          </input>\n\n        </div>\n        <div className=\"form-group\">\n          <label>Email: </label>\n          <input  type=\"email\"\n              required\n              name=\"email\"\n              className=\"form-control\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Password: </label>\n          <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              value={this.state.password}\n              onChange={this.onChangePassword}\n              />\n        </div>\n        <div className=\"form-group\" style={{textAlign: \"center\"}}>\n          <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n//MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  {register, clearErrors}\n) (RegisterModal);\n"]},"metadata":{},"sourceType":"module"}