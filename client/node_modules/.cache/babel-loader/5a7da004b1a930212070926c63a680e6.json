{"ast":null,"code":"var _jsxFileName = \"/Users/zz/Projects/React/my-app/src/components/SpaceMap.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MarkersOnMap from 'markers-on-map-react';\nconst maps_key = process.env.MY_GMAPS_KEY;\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, text);\n\nexport default class SpaceMap extends Component {\n  constructor(props) {\n    super(props);\n    this.initializeMap = this.initializeMap.bind(this);\n  }\n\n  componentDidMount() {\n    //Basic initialize\n    if (this.props.coord) {\n      this.initializeMap();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.hoveringover != this.props.hoveringover) {\n      this.initializeMap(this.props.hoveringover);\n    } else {\n      this.initializeMap();\n    }\n  }\n\n  initializeMap(newCenter) {\n    var center;\n\n    if (!newCenter) {\n      MarkersOnMap.Init({\n        googleApiKey: 'AIzaSyAsdNhcJt9MW7ChPW-wrSNQmSSMb4d4dS4',\n        //required => Google Maps JavaScript API Key( in string format)markerObjects: this.props.coord\n        markerObjects: this.props.coord,\n        mapHeight: '99%',\n        markerLabel: {\n          useLabel: true,\n          labelPosition: 'top',\n          labelFontSize: '50px',\n          labelFontWeight: '600',\n          labelFontFamily: 'Roboto'\n        },\n        markerDropAnimation: null\n      }); //Select map element(ID or Class)\n\n      MarkersOnMap.Run('div#GoogleMap');\n    } else if (newCenter.markerLat === 0 && newCenter.markerLong === 0) {\n      MarkersOnMap.Remarker(this.props.coord);\n    } else {\n      var newMarkers = [...this.props.coord];\n      newMarkers.push({\n        markerLat: newCenter.markerLat,\n        markerLong: newCenter.markerLong,\n        markerSize: 80\n      });\n      MarkersOnMap.Remarker(newMarkers);\n    }\n  }\n\n  render() {\n    return (// Important! Always set the container height explicitly\n      React.createElement(\"div\", {\n        id: \"GoogleMap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })\n    );\n  }\n\n}\nSpaceMap.defaultProps = {\n  center: {\n    lat: 37.802689,\n    lng: -122.276756\n  },\n  zoom: 11\n};","map":{"version":3,"sources":["/Users/zz/Projects/React/my-app/src/components/SpaceMap.js"],"names":["React","Component","GoogleMapReact","MarkersOnMap","maps_key","process","env","MY_GMAPS_KEY","AnyReactComponent","text","SpaceMap","constructor","props","initializeMap","bind","componentDidMount","coord","componentDidUpdate","prevProps","hoveringover","newCenter","center","Init","googleApiKey","markerObjects","mapHeight","markerLabel","useLabel","labelPosition","labelFontSize","labelFontWeight","labelFontFamily","markerDropAnimation","Run","markerLat","markerLong","Remarker","newMarkers","push","markerSize","render","defaultProps","lat","lng","zoom"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAA7B;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,IAAN,CAAtC;;AAEA,eAAe,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC9CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAI,KAAKH,KAAL,CAAWI,KAAf,EAAsB;AACpB,WAAKH,aAAL;AACD;AACF;;AACDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,YAAV,IAA0B,KAAKP,KAAL,CAAWO,YAAzC,EAAuD;AACrD,WAAKN,aAAL,CAAmB,KAAKD,KAAL,CAAWO,YAA9B;AACD,KAFD,MAEO;AACL,WAAKN,aAAL;AACD;AACF;;AACDA,EAAAA,aAAa,CAACO,SAAD,EAAY;AACvB,QAAIC,MAAJ;;AACA,QAAI,CAACD,SAAL,EAAgB;AACdjB,MAAAA,YAAY,CAACmB,IAAb,CAAkB;AAChBC,QAAAA,YAAY,EAAE,yCADE;AAEhB;AACAC,QAAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWI,KAHV;AAIhBS,QAAAA,SAAS,EAAE,KAJK;AAKhBC,QAAAA,WAAW,EAAE;AACXC,UAAAA,QAAQ,EAAE,IADC;AAEXC,UAAAA,aAAa,EAAE,KAFJ;AAGXC,UAAAA,aAAa,EAAE,MAHJ;AAIXC,UAAAA,eAAe,EAAE,KAJN;AAKXC,UAAAA,eAAe,EAAE;AALN,SALG;AAYhBC,QAAAA,mBAAmB,EAAE;AAZL,OAAlB,EADc,CAed;;AACA7B,MAAAA,YAAY,CAAC8B,GAAb,CAAiB,eAAjB;AACD,KAjBD,MAiBO,IAAIb,SAAS,CAACc,SAAV,KAAwB,CAAxB,IAA6Bd,SAAS,CAACe,UAAV,KAAyB,CAA1D,EAA6D;AAClEhC,MAAAA,YAAY,CAACiC,QAAb,CAAsB,KAAKxB,KAAL,CAAWI,KAAjC;AACD,KAFM,MAEA;AACL,UAAIqB,UAAU,GAAG,CAAC,GAAG,KAAKzB,KAAL,CAAWI,KAAf,CAAjB;AACAqB,MAAAA,UAAU,CAACC,IAAX,CAAgB;AAACJ,QAAAA,SAAS,EAAEd,SAAS,CAACc,SAAtB;AAAiCC,QAAAA,UAAU,EAAEf,SAAS,CAACe,UAAvD;AAAmEI,QAAAA,UAAU,EAAE;AAA/E,OAAhB;AACApC,MAAAA,YAAY,CAACiC,QAAb,CAAsBC,UAAtB;AACD;AACF;;AASDG,EAAAA,MAAM,GAAG;AACP,WACA;AACA;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGD;;AAzD6C;AAA3B9B,Q,CA6CZ+B,Y,GAAe;AACpBpB,EAAAA,MAAM,EAAE;AACNqB,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE,CAAC;AAFA,GADY;AAKpBC,EAAAA,IAAI,EAAE;AALc,C","sourcesContent":["import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MarkersOnMap from 'markers-on-map-react';\nconst maps_key = process.env.MY_GMAPS_KEY;\nconst AnyReactComponent = ({text}) => <div>{text}</div>;\n\nexport default class SpaceMap extends Component {\n  constructor(props) {\n    super(props);\n    this.initializeMap = this.initializeMap.bind(this);\n  }\n  componentDidMount() {\n    //Basic initialize\n    if (this.props.coord) {\n      this.initializeMap();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.hoveringover != this.props.hoveringover) {\n      this.initializeMap(this.props.hoveringover)\n    } else {\n      this.initializeMap();\n    }\n  }\n  initializeMap(newCenter) {\n    var center;\n    if (!newCenter) {\n      MarkersOnMap.Init({\n        googleApiKey: 'AIzaSyAsdNhcJt9MW7ChPW-wrSNQmSSMb4d4dS4',\n        //required => Google Maps JavaScript API Key( in string format)markerObjects: this.props.coord\n        markerObjects: this.props.coord,\n        mapHeight: '99%',\n        markerLabel: {\n          useLabel: true,\n          labelPosition: 'top',\n          labelFontSize: '50px',\n          labelFontWeight: '600',\n          labelFontFamily: 'Roboto'\n        },\n        markerDropAnimation: null\n      });\n      //Select map element(ID or Class)\n      MarkersOnMap.Run('div#GoogleMap');\n    } else if (newCenter.markerLat === 0 && newCenter.markerLong === 0) {\n      MarkersOnMap.Remarker(this.props.coord);\n    } else {\n      var newMarkers = [...this.props.coord];\n      newMarkers.push({markerLat: newCenter.markerLat, markerLong: newCenter.markerLong, markerSize: 80});\n      MarkersOnMap.Remarker(newMarkers);\n    }\n  }\n  static defaultProps = {\n    center: {\n      lat: 37.802689,\n      lng: -122.276756\n    },\n    zoom: 11\n  };\n\n  render() {\n    return (\n    // Important! Always set the container height explicitly\n    <div id=\"GoogleMap\"></div>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}