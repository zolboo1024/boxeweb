{"version":3,"sources":["components/CustomNavbar.js","components/tokenConfig.js","actions/errorActions.js","actions/types.js","actions/authActions.js","components/SpaceMap.js","components/Messenger.js","components/spaces-list.component.js","components/edit-space.component.js","components/CreateSpace.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/LogoutModal.js","components/DetailedSpace.js","App.js","index.js"],"names":["CustomNavbar","alignLinks","brand","className","href","alt","src","style","width","height","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","this","props","isAuthenticated","Component","connect","state","auth","tokenConfigJS","token","config","headers","returnErrors","msg","status","type","payload","clearErrors","console","log","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","register","username","email","password","body","JSON","stringify","post","logout","login","SpaceMap","process","MY_GMAPS_KEY","initializeMap","bind","coord","prevProps","hoveringover","newCenter","markerLat","markerLong","MarkersOnMap","Remarker","newMarkers","push","markerSize","Init","googleApiKey","markerObjects","mapHeight","markerLabel","useLabel","labelPosition","labelFontSize","labelFontWeight","labelFontFamily","markerDropAnimation","Run","defaultProps","center","lat","lng","zoom","socket","SpacesList","deleteSpace","onMouseExit","onHoverOver","spaces","i","spacecopy","size","length","Array","latitude","longitude","setState","error","longi","delete","filter","el","_id","map","currentspace","onMouseEnter","onMouseLeave","key","imagename","description","location","spaceList","user","EditSpace","onChangeUsername","onChangeDescription","onChangeLocation","onSubmit","users","match","params","e","target","value","preventDefault","space","window","textAlign","ref","required","onChange","CreateSpace","newlocation","handleSelect","address","geocodeByAddress","results","getLatLng","latLng","setLatitude","setLongitude","formatted_address","onChangeAreaWidth","onChangeAreaLength","onChangePrice","onChangeImage","areawidth","arealength","price","image","preview","files","URL","createObjectURL","thisspace","creatorid","FormData","append","history","Alert","color","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","backgroundColor","cursor","name","initialState","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","spaceReducer","middleWare","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","RegisterModal","onChangeEmail","onChangePassword","thisUser","LoginModal","LogoutModal","DetailedSpace","main","actions","closeIcon","header","revealIcon","Messenger","enduser","joined","socketIOClient","emitWhenJoining","senderID","receiverID","emit","on","off","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.186153e8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Navbar, NavItem, Icon} from 'react-materialize';\n//The Link component is a pre-made component imported as a part of the router package.\n//So you can just specify \"to\" prop and then make the button.\n\n//The router for the front end is different in a sense that they don't really\n//do the same thing. Here, it just makes component bases on what the router says.\n//In the backend, you can make REST requests.\n//But that can only happen in this case where the backend and the frotend are\n//running on different ports.\n//*If there are only one \"port\"(just a )\nclass CustomNavbar extends Component {\n  render() {\n    const logoStyle = {\n      width: '64',\n      height: 'auto'\n    }\n    const navbarColor = {\n      'backgroundColor': '#bae567'\n    }\n    return (<Navbar alignLinks=\"right\" brand={<a className = \"brand-logo\"\n      href = \"/\" > <img alt=\"the logo\" src=\"http://localhost:3000/spaces/images/ec60965e53975499cb3b6c1388a1113c.jpg\" style={logoStyle}/>\n    </a>} id=\"mobile-nav\" menuIcon={<Icon> menu</Icon>} style={navbarColor} options={{\n        draggable: true,\n        edge: 'left',\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        outDuration: 200,\n        preventScrolling: true\n      }}>\n      <NavItem href=\"/\">\n        Spaces\n      </NavItem>\n      {\n        this.props.isAuthenticated\n          ? (<NavItem href=\"/create\">\n            Create Space Log\n          </NavItem>)\n          : null\n      }\n      {\n        this.props.isAuthenticated\n          ? (<NavItem href=\"/logout\">\n            Log out\n          </NavItem>)\n          : (<NavItem href=\"/register\">\n            Register\n          </NavItem>)\n      }\n      {\n        this.props.isAuthenticated\n          ? null\n          : (<NavItem href=\"/login\">\n            Login\n          </NavItem>)\n      }\n    </Navbar>);\n  }\n}\n//MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({isAuthenticated: state.auth.isAuthenticated});\n\nexport default connect(mapStateToProps)(CustomNavbar);\n","export const tokenConfigJS = token => {\n  // Get token from localStorage\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }\n  //If we find the token, then it takes it and puts it in the\n  //config. Config is what is ultimately made into an HTTP request.\n  if(token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n}\n","import {GET_ERRORS, CLEAR_ERRORS} from './types';\n\n// RETURN CLEAR_ERRORS\nexport const returnErrors = (msg,status, id=null) => {\n  return {\n    type: GET_ERRORS,\n    payload: {msg, status, id}\n  }\n}\n\n//Clear errors\nexport const clearErrors = () => {\n  console.log(\"Clear errors called\");\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const GET_ITEMS=\"GET_ITEMS\";\nexport const ADD_ITEM=\"ADD_ITEM\";\nexport const DELETE_ITEM=\"DELETE_ITEM\";\nexport const ITEMS_LOADING=\"ITEMS_LOADING\";\nexport const USER_LOADING=\"USER_LOADING\";\nexport const USER_LOADED=\"USER_LOADED\";\nexport const AUTH_ERROR=\"AUTH_ERROR\";\nexport const LOGIN_SUCCESS=\"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL=\"LOGIN_FAIL\";\nexport const REGISTER_SUCCESS=\"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL=\"REGISTER_FAIL\";\nexport const GET_ERRORS=\"GET_ERRORS\";\nexport const CLEAR_ERRORS=\"CLEAR_ERRORS\";\nexport const LOGOUT_SUCCESS=\"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\n","import axios from 'axios';\nimport {returnErrors} from './errorActions';\nimport {clearErrors} from './errorActions';\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./types\";\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  //User loading\n  //Dispatch calls this action. Once it reaches the reducer,\n  //it contains nothing in the payload. Just an empty file with a type\n  var action = {\n    type: USER_LOADING\n  };\n  dispatch(action);\n  //Once it gets the user, then it dispatches something that actually\n  //contains something.\n  axios.get('http://localhost:3000/login/user/', tokenConfig(getState)).then(res => {\n    dispatch({type: USER_LOADED, payload: res.data});\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({type: AUTH_ERROR});\n  });\n};\n//Register a users\nexport const register = ({username, email, password}) => (dispatch, getState) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const body = JSON.stringify({username, email, password});\n  console.log(body)\n  axios.post('http://localhost:3000/users/', body, config).then(res => {\n    dispatch({type: REGISTER_SUCCESS, payload: res.data});\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n    dispatch({type: REGISTER_FAIL});\n  });\n}\n\n//Logs out a user\nexport const logout = () => (dispatch, getState) => {\n  try {\n    dispatch({type: LOGOUT_SUCCESS})\n  } catch (err) {\n    dispatch(returnErrors('Could not log you out', '', 'LOGOUT_FAIL'));\n    dispatch({type: LOGOUT_FAIL});\n  }\n}\n\n//Logs in a user\nexport const login = ({email, password}) => (dispatch, getState) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const body = JSON.stringify({email, password});\n  console.log(body)\n  axios.post('http://localhost:3000/login/', body, config).then(res => {\n    dispatch({type: LOGIN_SUCCESS, payload: res.data})\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n    dispatch({type: LOGIN_FAIL});\n  });\n}\n//Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from localStorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application\"\n    }\n  }\n  //If we find the token, then it takes it and puts it in the\n  //config. Config is what is ultimately made into an HTTP request.\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n}\n","import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MarkersOnMap from 'markers-on-map-react';\nconst maps_key = process.env.MY_GMAPS_KEY;\nconst AnyReactComponent = ({text}) => <div>{text}</div>;\n\nexport default class SpaceMap extends Component {\n  constructor(props) {\n    super(props);\n    this.initializeMap = this.initializeMap.bind(this);\n  }\n  componentDidMount() {\n    //Basic initialize\n    if (this.props.coord) {\n      this.initializeMap();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.hoveringover != this.props.hoveringover) {\n      this.initializeMap(this.props.hoveringover)\n    } else {\n      this.initializeMap();\n    }\n  }\n  initializeMap(newCenter) {\n    var center;\n    if (!newCenter) {\n      MarkersOnMap.Init({\n        googleApiKey: 'AIzaSyAsdNhcJt9MW7ChPW-wrSNQmSSMb4d4dS4',\n        //required => Google Maps JavaScript API Key( in string format)markerObjects: this.props.coord\n        markerObjects: this.props.coord,\n        mapHeight: '99%',\n        markerLabel: {\n          useLabel: true,\n          labelPosition: 'top',\n          labelFontSize: '50px',\n          labelFontWeight: '600',\n          labelFontFamily: 'Roboto'\n        },\n        markerDropAnimation: null\n      });\n      //Select map element(ID or Class)\n      MarkersOnMap.Run('div#GoogleMap');\n    } else if (newCenter.markerLat === 0 && newCenter.markerLong === 0) {\n      MarkersOnMap.Remarker(this.props.coord);\n    } else {\n      var newMarkers = [...this.props.coord];\n      newMarkers.push({markerLat: newCenter.markerLat, markerLong: newCenter.markerLong, markerSize: 80});\n      MarkersOnMap.Remarker(newMarkers);\n    }\n  }\n  static defaultProps = {\n    center: {\n      lat: 37.802689,\n      lng: -122.276756\n    },\n    zoom: 11\n  };\n\n  render() {\n    return (\n    // Important! Always set the container height explicitly\n    <div id=\"GoogleMap\"></div>);\n  }\n}\n","import React, {Component, useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {tokenConfigJS} from './tokenConfig';\nimport {loadUser} from '../actions/authActions';\nimport queryString from 'query-string';\nimport {connect} from 'react-redux';\nimport 'materialize-css';\nimport socketIOClient from \"socket.io-client\";\nlet socket;\nclass Messenger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enduser: null,\n      joined: false\n    };\n  }\n  componentDidMount() {\n    socket = socketIOClient('localhost:3002');\n    if(this.props.user) {\n      this.emitWhenJoining(socket);\n    }\n  }\n  emitWhenJoining(socket) {\n    let senderID = this.props.user._id;\n    let receiverID = this.props.match.params._id;\n    socket.emit('join', {senderID, receiverID}, ()=> {\n    });\n    this.setState({joined: true});\n  }\n  componentDidUpdate(){\n    if(!this.state.joined){\n    this.emitWhenJoining(socket);\n    socket.on('chat-message', data => {\n      console.log(data);\n    });\n    }\n  }\n  componentWillUnmount(){\n    socket.emit('disconnect');\n    socket.off();\n  }\n  render() {\n    var main = {\n      'padding': '20'\n    };\n    var image = {\n      'height': '40%',\n      'overflow': 'hidden'\n    }\n    return (<div>\n      Chat\n    </div>)\n  }\n}\n//MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({user: state.auth.user, isAuthenticated: state.auth.isAuthenticated, token: state.auth.token});\n\nexport default connect(mapStateToProps, {loadUser})(Messenger);\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {tokenConfigJS} from './tokenConfig';\nimport {loadUser} from '../actions/authActions';\nimport {connect} from 'react-redux';\nimport 'materialize-css';\nimport {Collection, CollectionItem} from 'react-materialize';\nimport SpaceMap from './SpaceMap';\nclass SpacesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteSpace = this.deleteSpace.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onHoverOver = this.onHoverOver.bind(this);\n    // this.goToUser = this.goToUser.bind(this);\n    this.state = {\n      spaces: [],\n      coord: [],\n      hoveringover: {\n        markerLat: 0,\n        markerLong: 0\n      }\n    };\n  }\n  componentDidMount() {\n    //When the component mounts, we can make adjustments. This only runs once\n    //so we can make some adjustments before it renders.\n    axios.get('http://localhost:3000/spaces/', tokenConfigJS(this.props.token)).then(response => {\n      const spacecopy = [...response.data];\n      const size = spacecopy.length;\n      let coord = new Array(size);\n      var i;\n      //here, we save the coordinates in the spaces that\n      //is presented and then save it in our state\n      //to be passed down to the maps component.\n      for (i = 0; i < size; i++) {\n        coord[i] = {\n          markerLat: spacecopy[i].latitude,\n          markerLong: spacecopy[i].longitude\n        };\n      }\n      this.setState({coord: coord, spaces: spacecopy});\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n  onHoverOver(id, lat, longi) {\n    this.setState({\n      hoveringover: {\n        markerLat: lat,\n        markerLong: longi\n      }\n    });\n  }\n  onMouseExit() {\n    this.setState({\n      hoveringover: {\n        markerLat: 0,\n        markerLong: 0\n      }\n    })\n  }\n  componentDidUpdate() {\n    console.log(this.state.hoveringover)\n  }\n  deleteSpace(id) {\n    axios.delete('http://localhost:3000/spaces/' + id).then(response => {\n      console.log(response.data)\n    });\n\n    this.setState({\n      spaces: this.state.spaces.filter(el => el._id !== id)\n    });\n  }\n  // goToUser(userid) {\n  //   axios.get('http://localhost:3000/users/' + userid).then(res => {\n  //     console.log(res.data);\n  //   });\n  // }\n  //When you go to the spaces/images/:imagename URL, it gets read by the Server\n  //and according to how we set the route, it then pulls the image from the\n  //database. Mongo\n  spaceList() {\n    return this.state.spaces.map(currentspace => {\n      return <CollectionItem className=\"avatar\" onMouseEnter={() => {\n          this.onHoverOver(currentspace._id, currentspace.latitude, currentspace.longitude)\n        }} onMouseLeave={this.onMouseExit} key={currentspace._id} href={'http://localhost:3001/spaces/'+currentspace._id}>\n        <img alt=\"\" className=\"circle\" \n        src={\"http://localhost:3000/spaces/images/\" + currentspace.imagename}/>\n        <span className=\"title\">\n          {currentspace.description}\n        </span>\n        <p>\n          {currentspace.location}\n          <br/>\n          Dimensions and price\n        </p>\n      </CollectionItem>;\n    })\n  }\n\n  render() {\n    var left = {\n      'float': 'left',\n      'width': '50%'\n    };\n    var right = {\n      'float': 'right',\n      'width': '50%'\n    };\n    var main = {\n      'overflow': 'hidden',\n      'padding': '20'\n    };\n    return (<div>\n      <div id=\"main\" style={main}>\n        <div id=\"left\" style={left}>\n          <Collection>\n            {this.spaceList()}\n          </Collection>\n        </div>\n        <div id=\"right\" style={right}>\n          <SpaceMap coord={this.state.coord} hoveringover={this.state.hoveringover}/>\n        </div>\n      </div>\n    </div>);\n  }\n}\n//MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({user: state.auth.user, isAuthenticated: state.auth.isAuthenticated, token: state.auth.token});\n\nexport default connect(mapStateToProps, {loadUser})(SpacesList);\n","import React, {Component} from 'react';\nimport axios from 'axios';\n// import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n//If it did use the same port a.k.a the same \"url\", then the calling\n//object would return the JSON but it wouldn;t really do anything but the\n//react part would just display whatever component is specified.\nexport default class EditSpace extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      description: '',\n      location: '',\n      users: []\n    }\n  }\n  componentDidMount() {\n    axios.get('http://localhost:3000/spaces/' + this.props.match.params.id).then(response => {\n      this.setState({username: response.data.username, description: response.data.description, location: response.data.location})\n    }).catch(function(error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:3000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username)\n        })\n      }\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n  onChangeUsername(e) {\n    this.setState({username: e.target.value})\n  }\n\n  onChangeDescription(e) {\n    this.setState({description: e.target.value})\n  }\n\n  onChangeLocation(e) {\n    this.setState({location: e.target.value})\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const space = {\n      username: this.state.username,\n      description: this.state.description,\n      location: this.state.location\n    }\n\n    console.log(space);\n\n    axios.post('http://localhost:3000/spaces/update/' + this.props.match.params.id, space).then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    var margincss = {\n      'margin': '100'\n    };\n    return (<div>\n      <h3 style={{textAlign: \"center\"}}>Edit Exercise Log</h3>\n      <form onSubmit={this.onSubmit} style = {margincss}>\n        <div className=\"form-group\">\n          <label>Username:\n          </label>\n          <select ref=\"userInput\" required=\"required\" className=\"form-control\" value={this.state.username} onChange={this.onChangeUsername}>\n            {\n              this.state.users.map(function(user) {\n                return <option key={user} value={user}>{user}\n                </option>;\n              })\n            }\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Description:\n          </label>\n          <input type=\"text\" required=\"required\" className=\"form-control\" value={this.state.description} onChange={this.onChangeDescription}/>\n        </div>\n        <div className=\"form-group\">\n          <label>Location:\n          </label>\n          <input type=\"text\" className=\"form-control\" value={this.state.location} onChange={this.onChangeLocation}/>\n        </div>\n\n        <div className=\"form-group\" style={{textAlign: \"center\"}}>\n          <input type=\"submit\" value=\"Edit Space Log\" className=\"btn btn-primary\"/>\n        </div>\n      </form>\n    </div>)\n  }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {loadUser} from '../actions/authActions';\nimport {connect} from 'react-redux';\nimport {tokenConfigJS} from './tokenConfig';\nimport {Alert} from 'reactstrap';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {geocodeByAddress, geocodeByPlaceId, getLatLng} from 'react-places-autocomplete';\n// import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nclass CreateSpace extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onChangeAreaWidth = this.onChangeAreaWidth.bind(this);\n    this.onChangeAreaLength = this.onChangeAreaLength.bind(this);\n    this.onChangePrice = this.onChangePrice.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeImage = this.onChangeImage.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.setLatitude = this.setLatitude.bind(this);\n    this.setLongitude = this.setLongitude.bind(this);\n    this.state = {\n      username: '',\n      description: '',\n      location: '',\n      areawidth: 0,\n      arealength: 0,\n      price: 0,\n      msg: '',\n      image: null,\n      preview: null,\n      latitude: 0,\n      longitude: 0\n    }\n  }\n  setLatitude(e) {\n    this.setState({latitude: e})\n  }\n  setLongitude(e) {\n    this.setState({longitude: e})\n  }\n  onChangeUsername(e) {\n    this.setState({username: e.target.value})\n  }\n  onChangeAreaWidth(e) {\n    this.setState({areawidth: e.target.value})\n  }\n  onChangeAreaLength(e) {\n    this.setState({arealength: e.target.value})\n  }\n  onChangePrice(e) {\n    this.setState({price: e.target.value})\n  }\n\n  onChangeDescription(e) {\n    this.setState({description: e.target.value})\n  }\n  onChangeImage(e) {\n    this.setState({image: e.target.files[0]});\n    this.setState({\n      preview: URL.createObjectURL(e.target.files[0])\n    });\n  }\n  onChangeLocation = newlocation => {\n    this.setState({location: newlocation});\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address).then(results => {\n      getLatLng(results[0]).then(latLng => {\n        console.log('Success', latLng);\n        this.setLatitude(latLng.lat);\n        this.setLongitude(latLng.lng);\n      });\n      //results[0].formatted_address contains the address that you can put in one line\n      var formatted_address = results[0].formatted_address;\n      this.onChangeLocation(formatted_address);\n    }).catch(error => console.error('Error', error));\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const thisspace = {\n      username: this.props.user.username,\n      description: this.state.description,\n      location: this.state.location,\n      areawidth: this.state.areawidth,\n      arealength: this.state.arealength,\n      price: this.state.price,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      creatorid: this.props.user._id\n    }\n    const data = new FormData();\n    //Here we are specifyin what kind of name that the file will be under in this form.\n    data.append('file', this.state.image);\n    data.append('username', thisspace.username);\n    data.append('description', thisspace.description);\n    data.append('location', thisspace.location);\n    data.append('areawidth', thisspace.areawidth);\n    data.append('arealength', thisspace.arealength);\n    data.append('price', thisspace.price);\n    data.append('latitude', thisspace.latitude);\n    data.append('longitude', thisspace.longitude);\n    data.append('creatorid', thisspace.creatorid);\n    axios.post('http://localhost:3000/spaces/upload', data, tokenConfigJS(this.props.token)).then(res => {\n      if (res.status === 200) {\n        this.props.history.push('/');\n      }\n    });\n  }\n  render() {\n    var margincss = {\n      'margin': '20'\n    };\n    return (<div>\n      <h3 style={{textAlign: \"center\"}}>Create New Space</h3>\n      {\n        this.state.msg\n          ? (<Alert color=\"danger\">{this.state.msg}</Alert>)\n          : null\n      }\n      <form onSubmit={this.onSubmit} style = {margincss}>\n        <label>Location:\n        </label>\n        <PlacesAutocomplete value={this.state.location} onChange={this.onChangeLocation} onSelect={this.handleSelect}>\n          {\n            ({getInputProps, suggestions, getSuggestionItemProps, loading}) => (<div>\n              <input {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}/>\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {\n                  suggestions.map(suggestion => {\n                    const className = suggestion.active\n                      ? 'suggestion-item--active'\n                      : 'suggestion-item';\n                    // inline style for demonstration purpose\n                    const style = suggestion.active\n                      ? {\n                        backgroundColor: '#fafafa',\n                        cursor: 'pointer'\n                      }\n                      : {\n                        backgroundColor: '#ffffff',\n                        cursor: 'pointer'\n                      };\n                    return (<div {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}>\n                      <span>{suggestion.description}</span>\n                    </div>);\n                  })\n                }\n              </div>\n            </div>)\n          }\n        </PlacesAutocomplete>\n        <div className=\"form-group\">\n          <label>Description:\n          </label>\n          <input type=\"text\" required=\"required\" className=\"form-control\" value={this.state.description} onChange={this.onChangeDescription}/>\n        </div>\n        <div className=\"form-group\">\n          <label>The space is:\n          </label>\n          <input type=\"number\" required=\"required\" className=\"form-control\" value={this.state.areawidth} onChange={this.onChangeAreaWidth}/>\n          <label>By\n          </label>\n          <input type=\"number\" required=\"required\" className=\"form-control\" value={this.state.arealength} onChange={this.onChangeAreaLength}/>\n        </div>\n        <div className=\"form-group\">\n          <label>Price per month:\n          </label>\n          <input type=\"number\" required=\"required\" className=\"form-control\" value={this.state.price} onChange={this.onChangePrice}/>\n        </div>\n        <div className=\"custom-file mb-3\">\n          <input type=\"file\" name=\"file\" id=\"file\" className=\"custom-file-input\" onChange={this.onChangeImage}></input>\n          <label className=\"custom-file-label\">Choose file</label>\n        </div>\n        <div>\n          {\n            this.state.image\n              ? (<img src={this.state.preview}/>)\n              : null\n          }\n        </div>\n        <div className=\"form-group\" style={{textAlign: \"center\"}}>\n          <input type=\"submit\" value=\"Create Space Log\" className=\"btn btn-primary\"/>\n        </div>\n      </form>\n    </div>)\n  }\n}\n//MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({user: state.auth.user, isAuthenticated: state.auth.isAuthenticated, token: state.auth.token});\n\nexport default connect(mapStateToProps, {loadUser})(CreateSpace);\n","import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n}\n//Basically a complex type of state for React. Once the state changes, it updates.\n//And action includes what kind of changes are made.\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.msg,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGOUT_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state= initialState, action) {\n  switch(action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      console.log('token saved in local storage');\n      return {\n        ...state,\n        ...action.payload,  //payload contains the token\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case LOGOUT_FAIL:\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'; //a class that combines reducers.\n//also can be used as a function\n//import spaceReducer from './spaceReducer';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport spaceReducer from './spaceReducer';\nexport default combineReducers({\n  error: errorReducer,\n  auth: authReducer,\n  space: spaceReducer\n});\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store; \n","import React, { Component } from 'react';\nimport {register} from '../../actions/authActions';\nimport {connect} from 'react-redux';\nimport store from '../../store';\nimport {Alert} from 'reactstrap';\nimport {clearErrors} from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\n// import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nclass RegisterModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      msg: ''\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Component mounted\");\n    const {isAuthenticated} = this.props;\n    if(isAuthenticated) {\n      this.props.history.push('/')\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    })\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const thisUser = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    }\n\n    console.log(thisUser);\n    //Attempt to create the user. If it is not created properly, we throw an\n    //error and if it is, we save the token in a local storage.\n    store.dispatch(register(thisUser));\n  }\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n  //When the component updates and the reducers throw an error, we save it in the component state.\n  //handling it in better ways.\n  //when the errors get cleared, this component gets updated.\n  componentDidUpdate(prevProps) {\n    const {error} = this.props;\n    if(error !== prevProps.error) {\n      //Check for register error\n      if(error.id === 'REGISTER_FAIL') {\n        this.setState({msg: error.msg});\n      } else {\n        this.setState({msg: null});\n      }\n    }\n    const {isAuthenticated} = this.props;\n    if(isAuthenticated) {\n      this.props.history.push('/')\n    }\n  }\n  render() {\n    var logincss = {\n      'margin': '5%'\n    };\n    return (\n    <div>\n      {this.state.msg ? (<Alert color = \"danger\">{this.state.msg}</Alert>) : null}\n      <h3 style={{textAlign: \"center\"}}>Register</h3>\n      <form onSubmit={this.onSubmit} style = {logincss}>\n        <div className=\"form-group\">\n          <label>Username: </label>\n          <input type=\"text\"\n              required\n              name=\"usernam\"\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n          </input>\n\n        </div>\n        <div className=\"form-group\">\n          <label>Email: </label>\n          <input  type=\"email\"\n              required\n              name=\"email\"\n              className=\"form-control\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Password: </label>\n          <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              value={this.state.password}\n              onChange={this.onChangePassword}\n              />\n        </div>\n        <div className=\"form-group\" style={{textAlign: \"center\"}}>\n          <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n//MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  {register, clearErrors}\n) (RegisterModal);\n","import React, {Component} from 'react';\nimport {login} from '../../actions/authActions';\nimport {connect} from 'react-redux';\nimport store from '../../store';\nimport {Alert} from 'reactstrap';\nimport {clearErrors} from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\n\nclass LoginModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      msg: ''\n    }\n  }\n\n  componentDidMount() {\n    const {isAuthenticated} = this.props;\n    if (isAuthenticated) {\n      this.props.history.push('/')\n    };\n    console.log(\"Component mounted\");\n  }\n\n  onChangeEmail(e) {\n    this.setState({email: e.target.value})\n  }\n\n  onChangePassword(e) {\n    this.setState({password: e.target.value})\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const thisUser = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    console.log(thisUser);\n    //Attempt to create the user. If it is not created properly, we throw an\n    //error and if it is, we save the token in a local storage.\n    store.dispatch(login(thisUser));\n  }\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n  //When the component updates and the reducers throw an error, we save it in the component state.\n  //handling it in better ways.\n  //when the errors get cleared, this component gets updated.\n  componentDidUpdate(prevProps) {\n    const {error} = this.props;\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({msg: error.msg});\n      } else {\n        this.setState({msg: null});\n      }\n    }\n    const {isAuthenticated} = this.props;\n    if (isAuthenticated) {\n      this.props.history.push('/')\n    }\n  }\n  render() {\n    var logincss = {\n      'margin': '20'\n    };\n    return (<div>\n      {\n        this.state.msg\n          ? (<Alert color=\"danger\">{this.state.msg}</Alert>)\n          : null\n      }\n      <h3 style={{textAlign: \"center\"}}>Login</h3>\n      <form onSubmit={this.onSubmit} style={logincss}>\n        <div className=\"form-group\">\n          <label>Email:\n          </label>\n          <input type=\"email\" required=\"required\" name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail}/>\n        </div>\n        <div className=\"form-group\">\n          <label>Password:\n          </label>\n          <input type=\"password\" name=\"password\" className=\"form-control\" value={this.state.password} onChange={this.onChangePassword}/>\n        </div>\n        <div className=\"form-group\" style={{textAlign: \"center\"}}>\n          <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\n        </div>\n      </form>\n    </div>)\n  }\n}\n//MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({isAuthenticated: state.auth.isAuthenticated, error: state.error});\n\nexport default connect(mapStateToProps, {login, clearErrors})(LoginModal);\n","import React, { Component } from 'react';\nimport {logout} from '../../actions/authActions';\nimport {connect} from 'react-redux';\nimport store from '../../store';\nimport {Alert} from 'reactstrap';\nimport {clearErrors} from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\n// import DatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nclass LogoutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: ''\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Component mounted\");\n    store.dispatch(logout());\n  }\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n  //When the component updates and the reducers throw an error, we save it in the component state.\n  //handling it in better ways.\n  //when the errors get cleared, this component gets updated.\n  componentDidUpdate(prevProps) {\n    const {error} = this.props;\n    if(error !== prevProps.error) {\n      //Check for register error\n      if(error.id === 'LOGOUT_FAIL') {\n        this.setState({msg: error.msg});\n      } else {\n        this.setState({msg: null});\n      }\n    }\n  }\n  render() {\n    return (\n    <div>\n      {this.state.msg ? (<Alert color = \"danger\">{this.state.msg}</Alert>)\n                      : (<Alert color = \"success\">You are logged out!</Alert>)}\n    </div>\n    )\n  }\n}\n//MApping state to props means that these values are actually attacked to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  {logout, clearErrors}\n) (LogoutModal);\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {tokenConfigJS} from './tokenConfig';\nimport {loadUser} from '../actions/authActions';\nimport {connect} from 'react-redux';\nimport 'materialize-css';\nimport {\n  Slider,\n  Slide,\n  Caption,\n  MediaBox,\n  Card,\n  CardTitle,\n  Icon\n} from 'react-materialize';\n\nclass DetailedSpace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      space: null\n    };\n  }\n  componentDidMount() {\n    axios.get('http://localhost:3000/spaces/' + this.props.match.params.id).then(res => {\n      this.setState({space: res.data});\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n  render() {\n    var main = {\n      'padding': '20'\n    };\n    var image = {\n      'height': '40%',\n      'overflow': 'hidden'\n    }\n    return (<div>\n      {\n        this.state.space\n          ? (<Card actions={[<a key=\"1\" href={\"http://localhost:3001/chat/\" + \n          this.state.space.creatorid}>Message the host</a>\n              ]} closeIcon={<Icon> close</Icon>} header={<CardTitle image = {\n              \"http://localhost:3000/spaces/images/\" + this.state.space.imagename\n            }\n            style = {\n              main\n            } > {\n              this.state.space.location\n            }\n            </CardTitle>} revealIcon={<Icon> more_vert</Icon>} style={main}>\n            {this.state.space.description}\n          </Card>)\n          : null\n      }\n    </div>)\n  }\n}\n//MApping state to props means that these values are actually attached to the\n//state of this component (REgistermodal).\nconst mapStateToProps = state => ({user: state.auth.user, isAuthenticated: state.auth.isAuthenticated, token: state.auth.token});\n\nexport default connect(mapStateToProps, {loadUser})(DetailedSpace);\n","import React, {Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n//We are using Router the same way we used router in the backend.\n//USing router, we can specify where it goes when the browser goes\n//to a specific path.\n\n//*But how does it find where the paths are? Maybe router is a global\n//variable that is saved after every modification.\nimport CustomNavbar from \"./components/CustomNavbar\"\nimport SpacesList from \"./components/spaces-list.component\";\nimport EditSpace from \"./components/edit-space.component\";\nimport CreateSpace from \"./components/CreateSpace\";\nimport {loadUser} from \"./actions/authActions\"; //\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport RegisterModal from './components/auth/RegisterModal';\nimport LoginModal from './components/auth/LoginModal';\nimport LogoutModal from './components/auth/LogoutModal';\nimport DetailedSpace from './components/DetailedSpace';\nimport socketIOClient from \"socket.io-client\";\nimport Messenger from \"./components/Messenger\";\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n  render() {\n    //when setting the path for the route, when you\n    //do the home directory, you have to set the\n    //exact variable to be true. Otherwise,\n    //the thing gets loaded at every page even though it's not\n    //exactly that route\n    return (<Provider store={store}>\n      <Router>\n        <div>\n          <CustomNavbar/>\n          <br/>\n          <Route path=\"/\" exact={true} component={SpacesList}/>\n          <Route path=\"/edit/:id\" component={EditSpace}/>\n          <Route path=\"/create\" component={CreateSpace}/>\n          <Route path=\"/register\" component={RegisterModal}/>\n          <Route path=\"/login\" component={LoginModal}/>\n          <Route path=\"/logout\" component={LogoutModal}/>\n          <Route path=\"/spaces/:id\" component={DetailedSpace}/>\n          <Route path=\"/chat/:id\" component={Messenger}/>\n        </div>\n      </Router>\n    </Provider>);\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//Basically injecting the component \"App\" into the 'root' div of the HTML file\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}